#!/usr/bin/env perl
use strict;
use warnings;
use 5.016;
use App::skryf::Post;
use Carp;
use File::ShareDir ':ALL';
use Mojolicious::Lite;
use Path::Tiny;
use Mango;

###############################################################################
# Setup configuration
###############################################################################
my $cfgfile = path("~/.skryf.conf");

path(dist_dir('App-skryf'), "skryf.conf")->copy($cfgfile)
  unless $cfgfile->exists;

plugin 'Config' => {file => $cfgfile};

my $cfghash = app->config->{skryfcfg} || +{};

###############################################################################
# Load plugins
###############################################################################
for (keys $cfghash->{extra_modules}) {
    plugin "$_" if $cfghash->{extra_modules}{$_} > 0;
}

###############################################################################
# Define template, media, static paths
###############################################################################
my $template_directory = $cfghash->{template_directory};
my $media_directory    = $cfghash->{media_directory};
my $static_directory   = $cfghash->{static_directory};

croak("A template|media|static directory must be defined.")
  unless $template_directory->is_dir
  && $media_directory->is_dir
  && $static_directory->is_dir;

push @{app->renderer->paths}, $template_directory;
push @{app->static->paths},   $media_directory;

###############################################################################
# use App::skryf::Command namespace
###############################################################################
push @{app->commands->namespaces}, 'App::skryf::Command';

###############################################################################
# Mongo setup
###############################################################################
my $mango = Mango->new($cfghash->{db}{dsn});
my $dbc =
  $mango->db($cfghash->{db}{name})->collection($cfghash->{db}{collection});

###############################################################################
# Routing
###############################################################################
my $skryfcfg = App::skryf::Cfg->new(%$cfghash);
helper skryfconf => sub {$skryfcfg};

get '/' => sub {
    my $self   = shift;
    my $_posts = $dbc->all;

    $self->stash(postlist => $_posts);

    my $tmpl = $cfghash->{index_template} || 'index';
    $self->render($tmpl);
};

# Category feeds
get '/feeds/:category/atom.xml' => sub {
    my $self     = shift;
    my $category = $self->param('category');
    my $_posts   = $dbc->find({category => $category})->all;
    $self->stash(postlist => $_posts);
    $self->render(template => 'atom', format => 'xml');
};

# atom.xml
get '/atom.xml' => sub {
    my $self   = shift;
    my $_posts = $dbc->all;

    $self->stash(postlist => $_posts);
    $self->render(template => 'atom', format => 'xml');
};

get '/:slug' => sub {
    my $self  = shift;
    my $slug  = $self->param('slug');
    my $tmpl  = $cfghash->{static_template} || 'static';
    my $_post = $dbc->find_one({slug => $slug});
    $self->stash(post => $_post);
    $self->render($tmpl);
};

get '/post/:slug' => sub {
    my $self = shift;

    my $slug = $self->param('slug');
    unless ($slug =~ /^[A-Za-z0-9_-]+$/) {
        $self->render(text => 'Invalid post name!', status => 404);
        return;
    }
    my $_post = $dbc->find_one({slug => $slug});
    unless ($_post) {
        $self->render(text => 'No post found!', status => 404);
    }
    $self->stash(post => $_post);

    my $tmpl = $cfghash->{post_template} || 'post';
    $self->render($tmpl);
};

###############################################################################
# START THE PARTY
###############################################################################
app->secret("WHO CARES RITE?");
app->start;

__END__

=head1 NAME

skryf - blogging gateway

=head1 DESCRIPTION

This is where the magic happens.

=cut
